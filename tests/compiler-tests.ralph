(define-module compiler-tests
  import: (core test stream reader compiler format))

;; (js:var profiler (require "ringo/profiler"))
;; (define-function profile (function)
;;   (print "STARTING")
;;   (bind ((result ((js:get-property profiler "profile")
;;                   function)))
;;     (print result)
;;     ((js:get-property result "profiler" "formatResult") 30)))

;; (bind ((source "(this is (foo #t blub #f foo: #rest simple #key test \"string with \\\"this\\\" embedded  \" 23.42))")
;;        (stream (make <string-stream> string: source)))

;;   (profile (method ()
;;              (read stream))))


;;
;;   (format-out "%=\n\n" form))

(js:var fs (require "fs"))
(define-function read-file (path)
  (bind ((file ((js:get-property fs "open")
                path
                (make-object "read" #t)))
         (result ((js:get-property file "read"))))
    ((js:get-property file "close"))
    result))

(bind ((source (read-file "./tests/runtime-tests.ralph"))
       (stream (make <string-stream>
                     string: (concatenate "(begin\n" source "\n)")))
       (start-time (js:new (js:identifier "Date")))
       (form (read stream))
       (read-time (js:new (js:identifier "Date")))
       (compiled (compile form statements?: #t))
       (compile-time (js:new (js:identifier "Date"))))
  (print compiled)
  (print "READ TIME:" (- read-time start-time))
  (print "COMPILE TIME:" (- compile-time read-time)))

