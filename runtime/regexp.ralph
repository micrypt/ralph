(define-module regexp
    import: (core)
    export: (<regexp> match replace-all))

(define-class <regexp> ())

(%alias-type <regexp> (js:identifier "RegExp"))

(define-function initialize ((regexp <regexp>)
			     #key pattern global? ignore-case? multiline?)
  (when pattern
    ((js:get-property regexp "compile")
     pattern (concatenate
	      (if global? "g" "")
	      (if ignore-case? "i" "")
	      (if multiline? "m" "")))))

(define-function find ((regexp <regexp>) (string <string>))
  (bind ((position ((js:get-property string "search")
		    regexp)))
    (when (> position -1)
      position)))

(define-function match ((regexp <regexp>) (string <string>))
  ((js:get-property string "match")
   regexp))

(define-function replace ((regexp <regexp>) (string <string>) replacement)
  ((js:get-property string "replace")
   regexp replacement))

(define-function replace-all ((regexp <regexp>) (string <string>) replacement)
  ((js:get-property string "replace")
   regexp replacement "g"))