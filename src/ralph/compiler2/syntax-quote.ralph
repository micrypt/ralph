(define-module ralph/compiler2/syntax-quote
  import: (ralph/compiler2/environment
           ralph/compiler2/utilities)
  export: (syntax-quote-form))


(define-function unquoted? (form env)
  (and (expression? form)
       (== (resolve-symbol (first form) env)
           `unquote)))

(define-function unquote-spliced? (form env)
  (and (expression? form)
       (== (resolve-symbol (first form) env)
           `unquote-splicing)))


(define-function syntax-quote-symbol (symbol env)
  `(quote ,(if (special-operator? symbol env)
               symbol
               (resolve-symbol symbol env))))

; NOTE: working, but unoptimized version
; (define-function syntax-quote-array (array env)
;   (if (unquoted? array env)
;       (second array)
;       `(concatenate ,@(map (method (form)
;                              (if (unquote-spliced? form env)
;                                  (second form)
;                                  `(%array ,(if (unquoted? form env)
;                                                (second form)
;                                                (syntax-quote-form form env)))))
;                            array))))

;; NOTE: optimized
(define-function syntax-quote-array (array env)
  (if (unquoted? array env)
      (second array)
      (bind ((part `(%array)))
        (reduce (method (result form)
                  (if (unquote-spliced? form env)
                      (begin
                       (set! part #f)
                       `(%concat ,result
                                 ,(second form)))
                      (bind ((form* (if (unquoted? form env)
                                        (second form)
                                        (syntax-quote-form form env))))
                        (if part
                            (begin
                             (push-last part form*)
                             result)
                            (begin
                             (set! part `(%array ,form*))
                             `(%concat ,result ,part))))))
                part array))))


(define-function syntax-quote-form (form env)
  (select form instance?
    ((<array>)
     (syntax-quote-array form env))
    ((<symbol>)
     (syntax-quote-symbol form env))
    (else: form)))