(define-module ralph/compiler/utilities
  export: (expression? transform-setter-identifier
           setter-identifier? identifier-name
           reset-symbol-counter! generate-symbol))

;;;; utilities

(define-function expression? (form)
  (and (instance? form <array>)
       (not (empty? form))
       (instance? (first form) <symbol>)))

(define-function transform-setter-identifier (identifier)
  (symbol (concatenate (symbol-name identifier)
                       "-setter")))

(define-function setter-identifier? (form)
  (and (instance? form <array>)
       (== (size form) 2)
       (every? (rcurry instance? <symbol>)
               form)
       (== (symbol-name (first form))
           "setter")))

(define-function identifier-name (identifier)
  (symbol-name
   (if (setter-identifier? identifier)
       (transform-setter-identifier (second identifier))
       identifier)))

(define *symbol-count* 0)

(define-function reset-symbol-counter! ()
  (set! *symbol-count* 0))

(define-function generate-symbol (prefix)
  (bind ((name (concatenate
                (if prefix
                    (concatenate prefix "_")
                    "$")
                (as-string (inc! *symbol-count*))))
         (result (symbol name)))
    (set! (get result "generated?") #t)
    result))