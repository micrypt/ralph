
(define-module ralph/compiler/symbol-lifting.test
  import: (ralph/test
           ralph/compiler/macroexpansion
           ralph/compiler/anf
           ralph/compiler/statements
           ralph/compiler/symbol-lifting
           ralph/compiler/environment.test))


(define-function make-environment ()
  (make-test-environment "ralph/compiler/symbol-lifting.test"))

;;;;

(reset-symbol-counter!)
(bind ((env (make-environment)))
  (check-equal "lift-symbols: simple"
               `(%begin
                  (%define $1 (%quote ,'a))
                  $1)
               (lift-symbols
                (macroexpand-all
                 '(begin 'a)
                 env)
                env)))


(reset-symbol-counter!)
(bind ((env (make-environment)))
  (check-equal "lift-symbols: multiple uses"
               `(%begin
                 (%define $1 (%quote ,'a))
                 (%begin
                   (%define $2 (%quote ,'b))
                   (%begin
                     (%define $3 (%quote ,'c))
                     (%bind (,'a $1)
                      (%bind (,'b $2)
                       (,'foo ,'a $1 ,'b $2 $3))))))
               (lift-symbols
                (macroexpand-all
                 '(bind ((a 'a)
                         (b 'b))
                    (foo
                     a 'a
                     b 'b
                     'c))
                 env)
                env)))


(reset-symbol-counter!)
(bind ((env (make-environment)))
  (check-equal "lift-symbols: method"
               `(%begin
                  (%define $2 (%quote ,'a))
                  (%begin
                   23
                   (%method ,'$1 (,'x)
                     $2)))
               (lift-symbols
                (macroexpand-all
                 '(begin
                   23
                   (method (x)
                     'a))
                 env)
                env)))


(reset-symbol-counter!)
(bind ((env (make-environment)))
  (check-equal "lift-symbols: begin, if, while"
               `(%begin
                  (%define $1 (%quote ,'a))
                  (%begin
                    (%define $2 (%quote ,'b))
                    (%begin
                      (%define $3 (%quote ,'c))
                      (%begin
                        (%if $1
                             (%while (,'bar $2)
                               (%begin $1 23 $3))
                             $3)
                        $2))))
               (lift-symbols
                (macroexpand-all
                 '(begin
                   (if 'a
                       (while (bar 'b)
                         'a
                         23
                         'c)
                       'c)
                   'b)
                 env)
                env)))
