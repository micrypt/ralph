(define-module ralph/regexp
  import: (ralph/core)
  export: (<regexp> match replace-all))

(define <regexp> (js:inline "RegExp"))

(define-method initialize ((regexp <regexp>)
                           #key pattern global? ignore-case? multiline?)
  (when pattern
    ((js:get-property regexp "compile")
     pattern (concatenate
	      (if global? "g" "")
	      (if ignore-case? "i" "")
	      (if multiline? "m" "")))))

(define-function find ((regexp <regexp>) (string <string>))
  (bind ((position ((js:get-property string "search")
		    regexp)))
    (when (> position -1)
      position)))

(define-function match ((regexp <regexp>) (string <string>))
  ((js:get-property string "match")
   regexp))
